<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 1、web.xml中shiro的filter对应的bean :Shiro 的Web过滤器 -->
    <!-- Shiro主过滤器本身功能十分强大,其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
        <property name="loginUrl" value="/loginController/login.do" />
        <property name="successUrl" value="/mainController/main.do" />
        <!-- 通过unauthorizedUrl指定没有权限操作时跳转页面 -->
        <property name="unauthorizedUrl" value="/refuse.jsp" />
        <!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- 静态资源设置匿名访问 -->
                /view/css/** = anon
                /view/fonts/** = anon
                /view/img/** = anon
                /view/js/** = anon
                /view/less/** = anon
                /view/media/** = anon
                /view/vendors/** = anon
                /websocket.do=anon
                /personController/**=anon
                /email/**=anon
                <!-- ################## 用户按钮级权限 -->
                /userController/saveUserExtend=perms[sys:user:update]
                /userController/addUserExtend=perms[sys:user:add]
                /userController/userExtendDelete=perms[sys:user:delete]
                <!-- 用户增加 -->
                <!-- /view/user/addUser.jsp = perms[user:add] -->
                <!-- ################## -->

                <!--请求 logout.do地址，shiro清除session -->
                /logout.do = logout
                <!-- 系统中登录动作需要放行-->
                 <!--/login.action = anon-->
                <!-- 系统中注册动作需要放行-->
                 <!--/regist.action = anon-->
                <!-- 所有的URL都必须认证通过才可以访问 -->
                 /** = authc
                <!-- remember -->
                <!--/** = user-->
                <!-- 所有的URL都可以匿名访问 -->
                <!-- /** = anon -->
            </value>
        </property>
    </bean>
    <!-- 2、securityManager安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="customRealm" />
        <!--注入缓存管理器-->
        <!--<property name="cacheManager" ref="shirocacheManager"/>-->
        <!-- 配置sessionManager，提供session管理 -->
        <property name="sessionManager" ref="sessionManager"></property>
        <!--配置session记住我-->
        <!--<property name="rememberMeManager" ref="rememberMeManager"></property>-->
   </bean>
    <!-- 3、realm -->
    <bean id="customRealm" class="com.zx.erpsystem.system.shiro.CustomRealm">
    <!-- 4、凭证匹配器 -->
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="md5" />
                <property name="hashIterations" value="1024" />
            </bean>
        </property>
    </bean>
        <!-- 5、缓存管理器 -->
        <!--<bean id="shirocacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">-->
         <!--<property name="cacheManagerConfigFile" value="classpath:spring/shiro-ehcache.xml"/>-->
        <!--</bean>-->
    <!-- 6、shiro结合Session会话管理器 start -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session的失效时长，单位毫秒 1小时: 3600000, itzixi站点设置以 6小时 为主：21600000 -->
        <!-- 设置全局会话超时时间，默认30分钟，即如果30分钟内没有访问会话将过期 1800000 -->
        <property name="globalSessionTimeout" value="3600000"/>
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
        <!-- 是否开启会话验证器，默认是开启的 -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
    </bean>
    <!--记住密码Cookie -->
    <!--7, rememberMe管理器,cipherKey生成见{@code Base64Test.java} -->
    <!--<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">-->
        <!--<property name="cookie" ref="rememberMeCookie"/>-->
    <!--</bean>-->
        <!--<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">-->
            <!--<constructor-arg value="rememberMe"/>-->
            <!--&lt;!&ndash; 1天,采用spring el表达式来计算，方便修改 &ndash;&gt;-->
             <!--<property name="maxAge" value="#{1 * 24 * 60 * 60}"/>-->
            <!--&lt;!&ndash;访问的网站存在二级域名、三级域名时添加&ndash;&gt;-->
            <!--&lt;!&ndash;<property name="domain" value=".wdz.com"/> &ndash;&gt;-->
       <!--</bean>-->
    <!--form表单登陆的过滤器，这个过滤器对应的认证key是authc,当登陆的请求匹配到这个key的时候，就将这个过滤器加入到当前请求的过滤器链中。-->
    <!--<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">-->
    <!--&lt;!&ndash;loginName 对应form表单的用户名&ndash;&gt;-->
    <!--<property name="usernameParam" value="username" />-->
    <!--&lt;!&ndash;password 对应form表单的密码&ndash;&gt;-->
    <!--<property name="passwordParam" value="password" />-->
    <!--&lt;!&ndash;rememberMe 记住我checkbox 是否记住我默认为false&ndash;&gt;-->
    <!--<property name="rememberMeParam" value="rememberMe" />-->
    <!--&lt;!&ndash;form 的action&ndash;&gt;-->
    <!--<property name="loginUrl" value="/loginController/login.do"/>-->
    <!--</bean>-->
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>